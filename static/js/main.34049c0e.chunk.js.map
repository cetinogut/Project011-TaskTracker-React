{"version":3,"sources":["store/initialStates.js","components/Button.js","components/Header.js","helpers/CategoryIconMapper.js","components/tooltip/Tooltip.js","components/Task.js","components/Tasks.js","helpers/InputHelpers.js","components/CreateTask.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","id","text","category","endDate","isDone","Button","color","toggleShow","className","style","backgroundColor","onClick","Header","title","isTaskBarShowed","switchCategoryIconComponent","switchParam","component","console","log","Tooltip","props","timeout","useState","active","setActive","onMouseEnter","setTimeout","delay","onMouseLeave","clearInterval","children","direction","content","Task","task","onDelete","onEdit","toggleDone","onDoubleClick","window","confirm","toString","Tasks","tasks","map","setInput","setter","e","currentTarget","value","CreateTask","onCreate","setText","setCategory","Date","setEndDate","onSubmit","preventDefault","alert","htmlFor","name","type","placeholder","onChange","cursor","selected","date","showTimeSelect","dateFormat","minDate","maxDate","addMonths","showDisabledMonthNavigation","calendarStartDay","App","setTasks","setIsTaskBarShowed","prevState","uniqID","now","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAaA,G,MAAe,CACxB,CACEC,GAAI,EACJC,KAAM,8BACNC,SAAS,SACTC,QAAS,oBACTC,QAAQ,GAEV,CACEJ,GAAI,EACJC,KAAM,eACNC,SAAS,OACTC,QAAS,oBACTC,QAAQ,GAEV,CACEJ,GAAI,EACJC,KAAM,kBACNC,SAAS,SACTC,QAAS,qBACTC,QAAQ,K,OCHCC,MAdf,YAA6C,IAA5BJ,EAA2B,EAA3BA,KAAMK,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC1B,OACI,8BACG,wBACCC,UAAU,MACVC,MAAO,CAACC,gBAAiBJ,GACzBK,QAASJ,EAHV,SAKKN,OCgBDW,MAtBf,YAAiG,IAAD,IAA/EC,aAA+E,MAAvE,wCAAuE,EAA9BN,EAA8B,EAA9BA,WAAYO,EAAkB,EAAlBA,gBAC1E,OACI,yBAAQN,UAAY,SAApB,UACI,6BAAKK,IACL,cAAC,EAAD,CACIP,MAAOQ,EAAkB,YAAc,SACvCb,KACIa,EAAkB,yBAA2B,yBAEjDP,WAAYA,Q,gBCTfQ,EAA8B,SAAEC,GACzC,IAAIC,EAEL,OADAC,QAAQC,IAAIH,GACJA,GACN,IAAK,OACHC,EAAY,cAAC,IAAD,IACb,MACD,IAAK,SACHA,EAAY,cAAC,IAAD,IACZ,MACF,IAAK,SACL,IAAK,UACHA,EAAY,cAAC,IAAD,IACZ,MACF,IAAK,UACHA,EAAY,cAAC,IAAD,IACZ,MACF,QACEC,QAAQC,IAAI,yBAA0BH,GAG1C,OADAE,QAAQC,IAAIF,GACLA,GCWKG,G,MAlCC,SAACC,GACf,IAAIC,EADqB,EAEGC,oBAAS,GAFZ,mBAElBC,EAFkB,KAEVC,EAFU,KAezB,OACE,sBACEjB,UAAU,kBAEVkB,aAfY,WACdJ,EAAUK,YAAW,WACnBF,GAAU,KACTJ,EAAMO,OAAS,MAahBC,aAVY,WACdC,cAAcR,GACdG,GAAU,IAIV,UAOGJ,EAAMU,SACNP,GACC,qBAAKhB,UAAS,sBAAiBa,EAAMW,WAAa,OAAlD,SAEGX,EAAMY,eCrBJC,EAAO,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WAC1C,OACI,sBAAK9B,UAAS,eAAU2B,EAAK/B,OAAS,OAAS,IAC9CmC,cAAgB,kBAAMD,EAAWH,EAAKnC,KADvC,UAEI,sBAAKQ,UAAU,YAAf,UACI,6BACK2B,EAAKlC,OAEV,sBAAKO,UAAU,eAAf,UACE,cAAC,EAAD,CAASyB,QAAQ,qBAAqBD,UAAU,MAAhD,SACE,cAAC,IAAD,CAAiBxB,UAAU,iBAE3BG,QAAS,WAAY6B,OAAOC,QAAP,4CAAoDN,EAAKlC,KAAzD,YAAwEmC,EAASD,EAAKnC,SAG7G,cAAC,EAAD,CAASiC,QAAQ,0BAA0BD,UAAU,MAArD,SACE,cAAC,IAAD,CAAUxB,UAAU,mBACpBG,QAAS,kBAAK0B,EAAOF,EAAKnC,eAKlC,sBAAKQ,UAAU,YAAf,UACE,4BACG2B,EAAKjC,WAEN,+BAAOa,EAA4BoB,EAAKjC,eAG5C,4BAAIiC,EAAKhC,QAAQuC,iBCnCd,SAASC,EAAT,GAAuD,IAAvCC,EAAsC,EAAtCA,MAAOR,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,WAEpD,OACI,8BASQM,EAAMC,KAAI,SAACV,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,EAAUC,OAAQA,EAAQC,WAAYA,GAArEH,EAAKnC,S,qCChBpB8C,EAAW,SAACC,GAAD,OAAY,SAACC,GAAD,OAAOD,EAAOC,EAAEC,cAAcC,SCWnD,SAASC,EAAT,GAAiC,IAAZC,EAAW,EAAXA,SAAW,EACnB7B,mBAAS,IADU,mBACpCtB,EADoC,KAC9BoD,EAD8B,OAEb9B,mBAAS,IAFI,mBAEtCrB,EAFsC,KAE5BoD,EAF4B,OAKb/B,mBAAS,IAAIgC,MALA,mBAKpCpD,EALoC,KAK3BqD,EAL2B,KAU3CtC,QAAQC,IAAR,aAA0B,CAAClB,OAAME,YAmBjC,OACI,uBAAMK,UAAU,WAAWiD,SAlBd,SAACT,GACdA,EAAEU,iBACEzD,GAASE,GAGLD,IACAA,EAAW,WAGfkD,EAAS,CAACnD,OAAME,UAASD,WAAUE,QAAO,IAC1CiD,EAAQ,IACRC,EAAY,IACZE,EAAW,IAAID,OATfI,MAAM,4BAeV,UACA,sBAAKnD,UAAU,eAAf,UACE,uBAAOoD,QAAQ,OAAf,kBACA,uBACE5D,GAAG,OACH6D,KAAK,OACLC,KAAK,OACLC,YAAY,oBAEZb,MAAOjD,EACP+D,SAAUlB,EAASO,QAKvB,sBAAK7C,UAAU,eAAf,UACE,wBAAOoD,QAAQ,WAAf,0BACE,cAAC,EAAD,CAAS3B,QAAQ,6BAA6BD,UAAU,QAAxD,SACI,cAAC,IAAD,CAAkBvB,MAAS,CAAEH,MAAO,QAAS2D,OAAO,kBAGzD,yBACCf,MAAOhD,EACP8D,SAAUlB,EAASQ,GAFpB,UAKC,wBAAQJ,MAAM,GAAd,+BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,2BAiBJ,sBAAK1C,UAAU,eAAf,UACE,uBAAOoD,QAAQ,OAAf,0CACA,cAAC,IAAD,CACEpD,UAAY,WACZR,GAAG,OACH6D,KAAK,OAELK,SAAU/D,EACV6D,SAAU,SAACG,GAAD,OAAUX,EAAWW,IAC/BC,gBAAc,EAEdC,WAAW,uBACXC,QAAS,IAAIf,KACbgB,QAASC,kBAAU,IAAIjB,KAAQ,GAC/BkB,6BAA2B,EAC3BC,iBAAkB,OAGtB,uBAAOZ,KAAK,SAASZ,MAAM,YAAY1C,UAAU,qBC3C1CmE,MAxDf,WAAgB,IAAD,EACapD,mBAASxB,GADtB,mBACN6C,EADM,KACCgC,EADD,OAEiCrD,oBAAS,GAF1C,mBAENT,EAFM,KAEW+D,EAFX,KAmCb,OACE,sBAAKrE,UAAU,YAAf,UAEE,cAAC,EAAD,CAAQK,MAAO,eACfC,gBAAiBA,EACjBP,WAPa,kBAAMsE,GAAmB,SAACC,GAAD,OAAgBA,QAUrDhE,GAAmB,cAACqC,EAAD,CAAYC,SArCrB,SAACjB,GAChB,IAAM4C,EAASxB,KAAKyB,MACdC,EAAO,aAAGF,UAAW5C,GAC3BjB,QAAQC,IAAR,UAAuB8D,GACvBL,GAAS,SAACE,GAAD,4BAAkBA,GAAlB,CAA6BG,UAmCjCrC,EAAMsC,OAAS,EACd,cAACvC,EAAD,CAAOC,MAAOA,EAAOR,SAzBZ,SAACpC,GAAD,OAAQ4E,EAAShC,EAAMuC,QAAO,SAAChD,GAAD,OAAUA,EAAKnC,KAAOA,OAyBnBqC,OAjCnC,SAACrC,GAAD,OACb4E,EACEhC,EAAMC,KAAI,SAACV,GAAD,OACVA,EAAKnC,KAAOA,EAAZ,2BAAqBmC,GAArB,IAA2B/B,QAAS+B,EAAK/B,SAAU+B,OA8BWG,WAtB/C,SAACtC,GAClB4E,EACEhC,EAAMC,KAAI,SAACV,GAAD,OACVA,EAAKnC,KAAOA,EAAZ,2BAAqBmC,GAArB,IAA2B/B,QAAS+B,EAAK/B,SAAU+B,SAsB/C,qDC7COiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.34049c0e.chunk.js","sourcesContent":["export const initialState = [\r\n    {\r\n      id: 1,\r\n      text: \"Study React Pre-Class Notes\",\r\n      category:\"School\",\r\n      endDate: \"Feb 5th at 2:30pm\",\r\n      isDone: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Feed the Dog\",\r\n      category:\"Home\",\r\n      endDate: \"Feb 6th at 1:30pm\",\r\n      isDone: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Attend in-Class\",\r\n      category:\"School\",\r\n      endDate: \"Feb 7th at 20:00pm\",\r\n      isDone: false,\r\n    },\r\n  ];","import React from 'react'\r\n\r\n\r\nfunction Button({text, color, toggleShow }) {\r\n    return (\r\n        <div>\r\n           <button \r\n            className=\"btn\" \r\n            style={{backgroundColor: color}} \r\n            onClick={toggleShow}\r\n            >\r\n               {text}\r\n           </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nfunction Header({title = \"Task Tracker as default from parantez\", toggleShow, isTaskBarShowed}) {\r\n    return (\r\n        <header className = \"header\">\r\n            <h1>{title}</h1>\r\n            <Button\r\n                color={isTaskBarShowed ? \"steelblue\" : \"purple\"}\r\n                text={\r\n                    isTaskBarShowed ? \"Hide Create a Task Bar\" : \"Show Create a Task Bar\"\r\n                }\r\n                toggleShow={toggleShow}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\n/* Header.defaultProps ={\r\n    title :\"Task Tracker from default\"\r\n} */\r\n\r\n/* Header.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n} */\r\nexport default Header;","import { FaHome } from \"react-icons/fa\"\r\nimport { FaSchool } from \"react-icons/fa\"\r\nimport { FaAddressBook } from \"react-icons/fa\"\r\nimport { FaGlobe } from \"react-icons/fa\"\r\n\r\nexport const switchCategoryIconComponent = ( switchParam ) => {\r\n    let component;\r\n   console.log(switchParam);\r\n   switch (switchParam) {\r\n     case \"Home\":\r\n       component = <FaHome/>;\r\n      break;\r\n     case \"School\":\r\n       component = <FaSchool/>;\r\n       break;\r\n     case \"Office\":\r\n     case \"Friends\":\r\n       component = <FaAddressBook/>;\r\n       break;\r\n     case \"General\":\r\n       component = <FaGlobe/>;\r\n       break;\r\n     default:\r\n       console.log(\"Unknwon switch param: \", switchParam);\r\n   }\r\n   console.log(component);\r\n   return component;\r\n };\r\n","import React, { useState } from \"react\";\r\nimport \"./Tooltip.css\";\r\n\r\nconst Tooltip = (props) => {\r\n  let timeout;\r\n  const [active, setActive] = useState(false);\r\n\r\n  const showTip = () => {\r\n    timeout = setTimeout(() => {\r\n      setActive(true);\r\n    }, props.delay || 400);\r\n  };\r\n\r\n  const hideTip = () => {\r\n    clearInterval(timeout);\r\n    setActive(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Tooltip-Wrapper\"\r\n      // When to show the tooltip\r\n      onMouseEnter={showTip}\r\n      onMouseLeave={hideTip}\r\n    >\r\n      {/* Wrapping */}\r\n      {props.children}\r\n      {active && (\r\n        <div className={`Tooltip-Tip ${props.direction || \"top\"}`}>\r\n          {/* Content */}\r\n          {props.content}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import { BsFillTrashFill } from \"react-icons/bs\"\r\nimport { BsExclamationCircleFill } from \"react-icons/bs\"\r\nimport { BsPencil} from \"react-icons/bs\"\r\nimport { switchCategoryIconComponent} from '../helpers/CategoryIconMapper'\r\n\r\n\r\nimport Tooltip from \"./tooltip/Tooltip\";\r\n\r\n\r\nexport const Task = ({task, onDelete, onEdit, toggleDone}) => {\r\n    return (\r\n        <div className={`task ${task.isDone ? \"done\" : \"\"}`}\r\n         onDoubleClick ={() => toggleDone(task.id)}>\r\n            <div className=\"task-line\">\r\n                <h3>\r\n                    {task.text}\r\n                </h3>\r\n                <div className=\"edit-buttons\">\r\n                  <Tooltip content=\"click for deleting\" direction=\"top\">\r\n                    <BsFillTrashFill className=\"icons icon-red\" \r\n                    // onClick={() =>onDelete(task.id)}\r\n                    onClick={() => { if (window.confirm(`Are you sure you wish to delete : ${task.text} task?`)) onDelete(task.id) } }\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip content=\"click for editing(TODO)\" direction=\"top\">\r\n                    <BsPencil className=\"icons icon-green\"\r\n                    onClick={() =>onEdit(task.id)}/>\r\n                  </Tooltip>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"task-line\"> \r\n              <p>\r\n                {task.category} \r\n              </p>\r\n                <span>{switchCategoryIconComponent(task.category)}</span>\r\n\r\n            </div>\r\n            <p>{task.endDate.toString()}</p>\r\n            \r\n        </div>\r\n    )\r\n}","\r\nimport {Task} from \"./Task\";\r\n\r\nexport default function Tasks({tasks, onDelete, onEdit, toggleDone}) {\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                /* tasks.map((task) => (\r\n                    <h3 key={task.id}>{task.text}</h3>\r\n                )) */\r\n                /* tasks.map((task) => {\r\n                    return <h3 key={task.id}>{task.text}</h3>\r\n                }) */\r\n                /* tasks.map((task) => <h3 key={task.id}>{task.text}</h3>) */\r\n                tasks.map((task) =>\r\n                 <Task key={task.id} task={task} onDelete={onDelete} onEdit={onEdit} toggleDone={toggleDone}/>)\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const setInput = (setter) => (e) => setter(e.currentTarget.value);","//import DateTimePicker from 'react-datetime-picker' // this is for react-datetime-picker package\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { addMonths } from \"date-fns\";\r\n\r\nimport { useState } from 'react'\r\nimport { setInput } from  '../helpers/InputHelpers';\r\nimport { BsInfoCircleFill } from \"react-icons/bs\"\r\n\r\nimport Tooltip from \"./tooltip/Tooltip\";\r\n\r\nexport default function CreateTask({onCreate}) {\r\n    const [text, setText] = useState(\"\");\r\n    let [category, setCategory] = useState(\"\")\r\n    //const [date, setDate] = useState(new Date()); // this is for react-datetime-picker package\r\n    \r\n    const [endDate, setEndDate] = useState(new Date());\r\n    //const handleTextChange = (e) => setText(e.target.value) // refactored this line with setInput in helpers folder\r\n    \r\n\r\n    \r\n    console.log(`formValues`, {text, endDate})\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!text || !endDate){\r\n            alert(\"please fill both fields\")\r\n        } else{\r\n            if(!category){\r\n                category = \"Generic\"\r\n            } \r\n            //category ? category : \"Generic\";\r\n            onCreate({text, endDate, category, isDone:false});\r\n            setText(\"\");\r\n            setCategory(\"\");\r\n            setEndDate(new Date());\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit ={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"task\">Task</label>\r\n          <input\r\n            id=\"task\"\r\n            name=\"text\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a task name\"\r\n            // required\r\n            value={text}\r\n            onChange={setInput(setText)}\r\n            //onChange={handleTextChange}\r\n            \r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"category\">Task Category  \r\n            <Tooltip content=\"Default will be 'Generic'!\" direction=\"right\">\r\n                <BsInfoCircleFill style = {{ color: \"white\", cursor:\"pointer\"}}/>\r\n            </Tooltip>\r\n          </label>\r\n           <select\r\n            value={category}\r\n            onChange={setInput(setCategory)}\r\n            //style={{ marginTop: \"10px\", width: \"100px\", padding: \"10px\" }}\r\n          >\r\n            <option value=\"\">Select a Category</option>\r\n            <option value=\"Home\">Home</option>\r\n            <option value=\"School\">School</option>\r\n            <option value=\"Office\">Office</option>\r\n            <option value=\"Friends\">Friends</option>\r\n            <option value=\"Generic\">Generic</option>\r\n          </select>\r\n        </div>\r\n        {/* <div className=\"form-control\"> // this is for react-datetime-picker package\r\n          <label htmlFor=\"date\">Date-Time Picker</label>\r\n          <DateTimePicker\r\n            className = \"datetime\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={date}\r\n            onChange={setDate}\r\n            maxDetail=\"minute\"\r\n            //locale=\"tr-TR\"\r\n            format=\"dd-MM-y h:mm\"\r\n            amPmAriaLabel= \"Select AM/PM\"\r\n          />\r\n        </div> */}\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"date\">Planned End Date(DatePicker)</label>\r\n          <DatePicker\r\n            className = \"datetime\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            \r\n            selected={endDate}\r\n            onChange={(date) => setEndDate(date)}\r\n            showTimeSelect\r\n            //dateFormat=\"Pp\"\r\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            minDate={new Date()}\r\n            maxDate={addMonths(new Date(), 2)} //For all the functions used in props, you import them from 'date-fns'.\r\n            showDisabledMonthNavigation\r\n            calendarStartDay={1}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n      </form>\r\n    )\r\n}","import './App.css';\r\nimport {useState} from 'react';\r\nimport {initialState} from \"./store/initialStates\";\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport CreateTask from './components/CreateTask';\r\n\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState(initialState); // to list the tasks\r\n  const [isTaskBarShowed, setIsTaskBarShowed] = useState(false); // to toggle create form\r\n\r\n\r\n// create a task\r\nconst onCreate = (task) => {\r\n  const uniqID = Date.now(); // unique id için kullandık\r\n  const newTask ={uniqID, ...task}\r\n  console.log(`newTask`, newTask)\r\n  setTasks((prevState) =>[...prevState, newTask]) // prevState can be called whatever we like\r\n}\r\n// edit task .. this a TODO.. currently the code below toggles the isCompleted..\r\nconst onEdit = (id) => \r\n  setTasks(\r\n    tasks.map((task) => \r\n    task.id === id ? {...task, isDone: !task.isDone} : task\r\n    )\r\n  );\r\n\r\n// delete tasks\r\nconst onDelete = (id) => setTasks(tasks.filter((task) => task.id !== id));\r\n\r\n// toggle done\r\nconst toggleDone = (id) => {\r\n  setTasks(\r\n    tasks.map((task) => \r\n    task.id === id ? {...task, isDone: !task.isDone} : task\r\n    )\r\n  );\r\n};\r\n\r\n// toggle show and title\r\nconst toggleShow = () => setIsTaskBarShowed((prevState) => !prevState);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      \r\n      <Header title={\"Task Tracker\"} \r\n      isTaskBarShowed={isTaskBarShowed}\r\n      toggleShow={toggleShow}\r\n      />\r\n      \r\n      {isTaskBarShowed && <CreateTask onCreate={onCreate} />}\r\n\r\n      {tasks.length > 0 ? (\r\n        <Tasks tasks={tasks} onDelete= {onDelete} onEdit={onEdit} toggleDone={toggleDone}/>\r\n      ):\r\n      (\r\n        <p> No task to show</p>\r\n      )}\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}